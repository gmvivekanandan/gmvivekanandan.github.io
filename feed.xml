<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gmvivekanandan.github.io/</id><title>Cerberus</title><subtitle>Computer security blog.</subtitle> <updated>2023-02-26T16:17:20+00:00</updated> <author> <name>gmvivekanandan</name> <uri>https://gmvivekanandan.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gmvivekanandan.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://gmvivekanandan.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> ¬© 2023 gmvivekanandan </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>HTB Toxic(Challenge) Writeup</title><link href="https://gmvivekanandan.github.io/posts/HTB-TOXIC-CHALLENGE/" rel="alternate" type="text/html" title="HTB Toxic(Challenge) Writeup" /><published>2023-02-26T00:00:00+00:00</published> <updated>2023-02-26T16:14:37+00:00</updated> <id>https://gmvivekanandan.github.io/posts/HTB-TOXIC-CHALLENGE/</id> <content src="https://gmvivekanandan.github.io/posts/HTB-TOXIC-CHALLENGE/" /> <author> <name>Cerberus</name> </author> <category term="writeups" /> <category term="HTB" /> <summary> web/Toxic Description: Humanity has exploited our allies, the dart frogs, for far too long, take back the freedom of our lovely poisonous friends. Malicious input is out of the question when dart frogs meet industrialisation. üê∏ zip file *Login to Download index.php &amp;lt;?php spl_autoload_register(function ($name){ if (preg_match('/Model$/', $name)) { $name = "models/${name}";... </summary> </entry> <entry><title>RACTF 2022</title><link href="https://gmvivekanandan.github.io/posts/RACTF-2022/" rel="alternate" type="text/html" title="RACTF 2022" /><published>2022-11-20T00:00:00+00:00</published> <updated>2022-11-20T00:00:00+00:00</updated> <id>https://gmvivekanandan.github.io/posts/RACTF-2022/</id> <content src="https://gmvivekanandan.github.io/posts/RACTF-2022/" /> <author> <name>Cerberus</name> </author> <category term="writeups" /> <category term="RACTF 2022" /> <summary> crypto/Lightning Seeds Description: You won‚Äôt be able to break this, we used a randomizer! python file output file Python code #!/usr/bin/env python3 import random with open('flag.txt', 'r') as f: flag = f.read() seed = random.randint(0,999) random.seed(seed) encrypted = ''.join(f'{(ord(c) ^ random.randint(0,255)):02x}' for c in flag) with open('out.txt', 'w') as f: f.write(encry... </summary> </entry> <entry><title>UIUCTF 2022</title><link href="https://gmvivekanandan.github.io/posts/UIUCTF-2022/" rel="alternate" type="text/html" title="UIUCTF 2022" /><published>2022-08-01T00:00:00+00:00</published> <updated>2022-08-01T00:00:00+00:00</updated> <id>https://gmvivekanandan.github.io/posts/UIUCTF-2022/</id> <content src="https://gmvivekanandan.github.io/posts/UIUCTF-2022/" /> <author> <name>Cerberus</name> </author> <category term="writeups" /> <category term="UIUCTF 2022" /> <summary> rev/safepy Description: godlike snake with a nebula behind it and math equations floating around it challenge file Given python script from sympy import * def parse(expr): # learned from our mistake... let's be safe now # https://stackoverflow.com/questions/33606667/from-string-to-sympy-expression # return sympify(expr) # https://docs.sympy.org/latest/modules/parsing.html... </summary> </entry> <entry><title>DICE CTF@HOPE 2022</title><link href="https://gmvivekanandan.github.io/posts/DICE-CTF-@HOPE/" rel="alternate" type="text/html" title="DICE CTF@HOPE 2022" /><published>2022-07-26T00:00:00+00:00</published> <updated>2022-08-01T16:17:52+00:00</updated> <id>https://gmvivekanandan.github.io/posts/DICE-CTF-@HOPE/</id> <content src="https://gmvivekanandan.github.io/posts/DICE-CTF-@HOPE/" /> <author> <name>Cerberus</name> </author> <category term="writeups" /> <category term="DICE CTF@HOPE 2022" /> <summary> rev/slices Description: Have a slice Given python file flag = input('Enter flag: ') def fail(): print('Wrong!') exit(-1) if len(flag) != 32: fail() if flag[:5] != 'hope{': fail() if flag[-1] != '}': fail() if flag[5::3] != 'i0_tnl3a0': fail() if flag[4::4] != '{0p0lsl': fail() if flag[3::5] != 'e0y_3l': fail() if flag[6::3] != '_vph_is_t': fail() if flag[7::3] != 'ley0sc_l}': fail... </summary> </entry> </feed>
